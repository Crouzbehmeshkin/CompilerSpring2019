// for NonTerminals: (NT, edge-string, resultingNode, returningNode). for Terminals: (T, TokenType, "TokenString", resultingNode) 
Node_No: (starting_node, returning_node) (edge1) (edge2)
1. (1, 0)|(NT, declaration-list, 4, 2)
2. (0, 0)|(T, EOF, "End Of File", 3)
3. (0, 1)
4. (1, 0)|(NT, declaration-listB, 6, 5)
5. (0, 1)
6. (1, 0)|(NT, declaration, 9, 7)|(T, epsilon, "epsilon", 8)
7. (0, 0)|(NT, delaration-listB, 6, 8)
8. (0, 1)
9. (1, 0)|(NT, type-specifier, 23, 10)
10. (0, 0)|(T, ID, "*", 11)
11. (0, 0)|(NT, type, 13, 12)
12. (0, 1)
13. (1, 0)|(NT, var-declarationB, 18, 17)|(T, SYMBOL, "(", 14)
14. (0, 0)|(NT, params, 25, 15)
15. (0, 0)|(T, SYMBOL, ")", 16)
16. (0, 0)|(NT, compound-stmt, 48, 17)
17. (0, 1)
18. (1, 0)|(T, SYMBOL, "[", 19)|(T, SYMBOL, ";", 22)
19. (0, 0)|(T, NUM, "*", 20)
20. (0 ,0)|(T, SYMBOL, "]", 21)
21. (0, 0)|(T, SYMBOL, ";", 22)
22. (0, 1)
23. (1, 0)|(T, KEYWORD, "int", 24)|(T, KEYWORD, "void", 24)
24. (0, 1)
25. (1, 0)|(T, KEYWORD, "void", 26)|(T, KEYWORD, "int", 28)
26. (0, 0)|(NT, paramsB, 31, 27)
27. (0, 1)
28. (0, 0)|(T, ID, "*", 29)
29. (0, 0)|(NT, paramB, 45, 30)
30. (0, 0)|(NT, param-listB, 35, 27)
31. (1, 0)|(T, ID, "*", 32)|(T, epsilon, "epsilon", 34)
32. (0, 0)|(NT, paramB, 45, 33)
33. (0, 0)|(NT, param-listB, 35, 34)
34. (0, 1)
35. (1, 0)|(T, SYMBOL, ",", 36)|(T, epsilon, "epsilon", 38)
36. (0, 0)|(NT, param, 39, 37)
37. (0, 0)|(NT, param-listB, 35, 38)
38. (0, 1)
39. (1, 0)|(T, KEYWORD, "int", 40)|(T, KEYWORD, "void", 43)
40. (0, 0)|(T, ID, "*", 41)
41. (0, 0)|(NT, paramB, 45, 42)
42. (0, 1)
43. (0, 0)|(T, ID, "*", 44)
44. (0, 0)|(NT, paramB, 45, 42)
45. (1, 0)|(T, SYMBOL, "[", 46)|(T, epsilon, epsilon, 47)
46. (0, 0)|(T, SYMBOL, "]", 47)
47. (0, 1)
48. (1, 0)|(T, SYMBOL, "{", 49)
49. (0, 0)|(NT, declaration-list, 4, 50)
50. (0, 0)|(NT, statement-list, 53, 51)
51. (0, 0)|(T, SYMBOL, "}", 52)
52. (0, 1)
53. (1, 0)|(NT, statement-listB, 55 ,54)
54. (0, 1)
55. (1, 0)|(NT, statement, 58, 56)|(T, epsilon, "epsilon", 57)
56. (0, 0)|(NT, statement-listB, 55, 57)
57. (0, 1)
58. (1, 0)|(NT, expression-stmt, 60, 59)|(NT, compound-stmt, 48, 59)|(NT, selection-stmt, 65, 59)|(NT, iteration-stmt, 73, 59)|(NT, return-stmt, 79, 59)|(NT, switch-stmt, 85, 59)
59. (0, 1)
60. (1, 0)|(NT, expression, 109, 61)|(T, KEYWORD, "continue", 62)|(T, KEYWORD, "break", 63)|(T, SYMBOL,";", 64)
61. (0, 0)|(T, SYMBOL, ";", 64)
62. (0, 0)|(T, SYMBOL, ";", 64)
63. (0, 0)|(T, SYMBOL, ";", 64)
64. (0, 1)
65. (1, 0)|(T, KEYWORD, "if", 66)
66. (0, 0)|(T, KEWWORD, "(", 67)
67. (0, 0)|(NT, expression, 109, 68)
68. (0, 0)|(T, SYMBOL, ")", 69)
69. (0, 0)|(NT, statement, 58, 70)
70. (0, 0)|(T, KEYWORD, "else", 71)
71. (0, 0)|(NT, statement, 58, 72)
72. (0, 1)
73. (1, 0)|(T, KEYWORD, "while", 74)
74. (0, 0)|(T, SYMBOL, "(", 75)
75. (0, 0)|(NT, expression, 109, 76)
76. (0, 0)|(T, SYMBOL, ")", 77)
77. (0, 0)|(NT, statement, 58, 78)
78. (0, 1)
79. (1, 0)|(T, KEYWORD, "return", 80)
80. (0, 0)|(NT, return-statementB, 82, 81)
81. (0, 1)
82. (1, 0)|(T, SYMBOL, ";", 84)|(NT, expression, 109, 83)
83. (0, 0)|(T, SYMBOL, ";", 84)
84. (0, 1)
85. (1, 0)|(T, KEYWORD, "switch", 86)
86. (0, 0)|(T, SYMBOL, "(", 87)
87. (0, 0)|(NT, expression, 109, 88)
88. (0, 0)|(T, SYMBOL, ")", 89)
89. (0, 0)|(T, SYMBOL, "{", 90)
90. (0, 0)|(NT, case-stmts, 95, 92)
91. (0, 0)
92. (0, 0)|(NT, default-stmt, 105, 93)
93. (0, 0)|(T, SYMBOL, "}", 94)
94. (0, 1)
95. (1, 0)|(NT, case-stmtB, 97, 96)
96. (0, 1)
97. (1, 0)|(NT, case-stmt, 100, 98)
98. (0, 0)|(NT, case-stmtsB, 97, 99)
99. (0, 1)
100. (1, 0)|(T, KEYWORD, "case", 101)
101. (0, 0)|(T, NUM, "*", 102)
102. (0, 0)|(T, SYMBOL, ":", 103)
103. (0, 0)|(NT, statement-list, 53, 104)
104. (0, 1)
105. (1, 0)|(T, KEYWORD, "default", 106)|(T, epsilon, "epsilon", 108)
106. (0, 0)|(T, SYMBOL, ":", 107)
107. (0, 0)|(NT, statement-list, 53, 108)
108. (0, 1)
109. (1, 0)|(T, ID, "*", 110)|(NT, signed-factorA, 181, 112)
110. (0, 0)|(NT, expressionB, 115, 111)
111. (0, 1)
112. (0, 0)|(NT, termB, 155, 113)
113. (0, 0)|(NT, additive-expressionB, 144, 114)
114. (0, 0)|(NT, simple-expressionB, 132, 111)
115. (1, 0)|(T, SYMBOL, "(", 118)|(NT, varB, 128, 116)
116. (0, 0)|(NT, expressionC, 123, 117)
117. (0, 1)
118. (0, 0)|(NT, args, 185, 119)
119. (0, 0)|(T, SYMBOL, ")", 120)
120. (0, 0)|(NT, termB, 155, 121)
121. (0, 0)|(NT, additive-expression, 137, 122)
122. (0, 0)|(NT, simple-expressionB, 132, 117)
123. (0, 0)|(T, SYMBOL, "=", 124)|(NT, termB, 155, 126)
124. (0, 0)|(NT, expression, 109, 125)
125. (0, 1)
126. (0, 0)|(NT, additive-expression, 137, 127)
127. (0, 0)|(NT, simple-expressionB, 132. 125)
128. (1, 0)|(T, SYMBOL, "[", 129)|(T, epsilon, "epsilon", 131)
129. (0, 0)|(NT, expression, 109, 130)
130. (0, 0)|(T, SYMBOL, "]", 131)
131. (0, 1)
132. (1, 0)|(T, epsilon, "epsilon", 134)|(NT, relop, 135, 133)
133. (0, 0)|(NT, additive-expression, 137, 134)
134. (0, 1)
135. (1, 0)|(T, SYMBOL, "<", 136)|(T, SYMBOL, "==", 136)
136. (0, 1)
137. (1, 0)|(T, ID, "*", 138)|(NT, signed-factorA, 181, 142)
138. (0, 0)|(NT, factorB, 184, 139)
139. (0, 0)|(NT, termB, 155, 140)
140. (0, 0)|(NT, additive-expressionB, 144, 141)
141. (0, 1)
142. (0, 0)|(NT, termB, 155, 143)
143. (0, 0)|(NT, additive-expressionB, 144, 141)
144. (1, 0)|(NT, addop, 148, 145)|(T, epsilon, "epsilon", 147)
145. (0, 0)|(NT, term, 150, 146)
146. (0, 0)|(NT, additive-expressionB, 146, 147)
147. (0, 1)
148. (1, 0)|(T, SYMBOL, "+", 149)|(T, SYMBOL, "-", 149)
149. (0, 1)
150. (1, 0)|(T, ID, "*", 151)|(NT, signed-factorA, 181, 154)
151. (0, 0)|(NT, factorB, 184, 152)
152. (0, 0)|(NT, termB, 155, 153)
153. (0, 1)
154. (0, 0)|(NT, termB, 155, 153)
155. (1, 0)|(T, SYMBOL, "*", 156)|(T, epsilon, "epsilon", 158)
156. (0, 0)|(NT, signed-factor, 159, 157)
157. (0, 0)|(NT, termB, 155, 158)
158. (0, 1)
159. (1, 0)|(T, ID, "*", 160)|(NT, signed-factorA, 181, 161)
160. (0, 0)|(NT, factorB, 184, 161)
161. (0, 1)
162. (0, 0)|(NT, factor, 182, 163)
163. (0, 1)
164. (0, 0)|(NT, factor, 182, 163)
165. (0, 0)|(NT, factorB, 184, 166)
166. (0, 1)
167. (0, 0)|(NT, expression, 109, 168)
168. (0, 0)|(T, SYMBOL, ")", 169)
169. (0, 1)
170. (0, 1)
171. (0, 0)|(NT, args, 185, 172)
172. (0, 0)|(T, SYMBOL, ")", 173)
173. (0, 0)
174. (0, 1)
175. (0, 0)|(NT, arg-listB, 177, 176)
176. (0, 1)
177. (1, 0)|(T, SYMBOL, ",", 178)|(T, epsilon, "epsilon", 180)
178. (0, 0)|(NT, expression, 109, 179)
179. (0, 0)|(NT, arg-listB, 177, 180)
180. (0, 1)
181. (1, 0)|(T, SYMBOL, "-", 162)|(T, SYMBOL, "+", 164)|(NT, factorA, 183, 163)
182. (1, 0)|(T, ID, "*", 165)|(NT, factorA, 183, 166)
183. (1, 0)|(T, NUM, "*", 169)|(T, SYMBOL, "(", 167)
184. (1, 0)|(NT, varB, 128, 170)|(T, SYMBOL, "(", 171)
185. (1, 0)|(NT, arg-list, 186, 174)|(T, epsilon, "epsilon", 174)
186. (1, 0)|(NT, expression, 109, 175)